//
//  ListBikesViewController.swift
//  findBike
//
//  Created by Israel on 2/12/19.
//  Copyright (c) 2019 Israel. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import CoreLocation

final class ListBikesViewController: VCModulo, CLLocationManagerDelegate{

    var locationManager = CLLocationManager()
    //MARK: - Public properties -
    var presenter: ListBikesPresenterInterface!
    var isLocaliced: Bool = false
    var selectedBike: StationView!
    
    @IBOutlet weak var tableBikes: UITableView!
    var arrBikes:[StationView] = []
    
    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        let imageView = UIImageView(frame: CGRect(x: 0, y: 0, width: 30, height: 30))
        imageView.image = UIImage(named: "logo")
        imageView.contentMode = .scaleAspectFit
        self.navigationItem.titleView = imageView
        self.navigationController?.title = "Pruebas"
        self.navigationController?.navigationBar.barTintColor = UIColor(red: 113/255, green: 40/255, blue: 140/255, alpha: 1.0)
        
        tableBikes.dataSource = self
        tableBikes.delegate = self
        //tableBikes.register(EstatusTVC.self, forCellReuseIdentifier: "cellBike")
        
        self.showLoading(status: "Obteniendo estaciones")
        presenter.autenticate()
    }
    
    override var preferredStatusBarStyle: UIStatusBarStyle {
        return .lightContent
    }
    
    func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {
        
        let location = locationManager.location?.coordinate
        print("latitud: \(String(describing: location?.latitude)), longitud:\(String(describing: location?.longitude))")
        let loc = CLLocation(latitude: (location?.latitude)!, longitude: (location?.longitude)!)
        if !isLocaliced{
            presenter.getStations(loc)
            isLocaliced = true
        }
    }
	
}

// MARK: - Extensions -

extension ListBikesViewController: ListBikesViewInterface {
    
    func succesStationsNearby(_ arrFind: [StationView]) {
        self.hideLoading()
        presenter.goToDetail(selectedBike, arrFind)
        
    }
    
    func setDataView(_ arrBikes: [StationView]) {
        self.hideLoading()
        self.arrBikes = arrBikes
        self.tableBikes.reloadData()
    }
    
    func loginSucces(_ succes: Bool) {
        
        if succes{
            presenter.getStationsStatus()
            locationManager.delegate = self
            locationManager.requestWhenInUseAuthorization()
            locationManager.startUpdatingLocation()
        }
    }
}
extension ListBikesViewController: UITableViewDataSource, UITableViewDelegate{
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return arrBikes.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let bike = arrBikes[indexPath.row]
        let cell = tableView.dequeueReusableCell(withIdentifier: "cellBike") as! EstatusTVC
        cell.lblTitle.text = bike.direccion
        cell.lblNumBike.text = bike.disponible?.bikes?.description
        cell.lblNumSlots.text = bike.disponible?.slots?.description
        
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 90
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        selectedBike = arrBikes[indexPath.row]
        self.showLoading(status: "")
        presenter.getStationsNearby(selectedBike.id!)
    }
    
}
